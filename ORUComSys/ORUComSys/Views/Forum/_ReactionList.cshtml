@using Datalayer.Models
@model List<ReactionModels>
@{
    List<ReactionModels> Likes = new List<ReactionModels>();
    List<ReactionModels> Loves = new List<ReactionModels>();
    List<ReactionModels> Hates = new List<ReactionModels>();
    List<ReactionModels> XDs = new List<ReactionModels>();

    foreach(var reaction in Model) {
        switch(reaction.Reaction) {
            case ReactionType.Like:
                Likes.Add(reaction);
                break;
            case ReactionType.Love:
                Loves.Add(reaction);
                break;
            case ReactionType.Hate:
                Hates.Add(reaction);
                break;
            case ReactionType.XD:
                XDs.Add(reaction);
                break;
        }
    }
    Likes.OrderByDescending(reaction => reaction.Profile.FirstName);
    Loves.OrderByDescending(reaction => reaction.Profile.FirstName);
    Hates.OrderByDescending(reaction => reaction.Profile.FirstName);
    XDs.OrderByDescending(reaction => reaction.Profile.FirstName);
}

<div class="container">
    <div class="row p-2 reaction-table">
        <div class="col-md-3">
            <strong>LIKES:</strong><br />
            @foreach(var like in Likes) {
                <span>@like.Profile.FirstName @like.Profile.LastName</span><br />
            }
        </div>
        <div class="col-md-3">
            <strong>LOVES:</strong><br />
            @foreach(var love in Loves) {
                <span>@love.Profile.FirstName @love.Profile.LastName</span><br />
            }
        </div>
        <div class="col-md-3">
            <strong>HATES:</strong><br />
            @foreach(var hate in Hates) {
                <span>@hate.Profile.FirstName @hate.Profile.LastName</span><br />
            }
        </div>
        <div class="col-md-3">
            <strong>XD:</strong><br />
            @foreach(var xd in XDs) {
                <span>@xd.Profile.FirstName @xd.Profile.LastName</span><br />
            }
        </div>
    </div>
</div>